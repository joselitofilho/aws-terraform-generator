version: "3"

vars:
  LINT_TIMEOUT: 5m
  GOTEST_ARGS: -count=1 -v -failfast
  COVER_OUT: coverage.out
  COVER_NOMOCKS_OUT: coverage.nomocks.out

tasks:
  install-fmt:
    cmds:
      - go install golang.org/x/tools/cmd/goimports@latest
      - go install mvdan.cc/gofumpt@latest
  
  install-lint:
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
  
  install-mock:
    cmds:
      - go install go.uber.org/mock/mockgen@latest

  install:
    desc: "Install all project tools"
    deps: [install-fmt, install-lint, install-mock]
    cmds:
      - echo "==> To draw diagram, please install graphviz."
      - echo "==> To format terraform files, please install terraform."

  fmt:
    desc: "Format code"
    deps: [install-fmt]
    cmds:
      - goimports -w . && gofumpt -l -w .
  
  lint:
    desc: "Run golangci-lint"
    deps: [install-lint]
    cmds:
      - golangci-lint version
      - golangci-lint run -v --timeout="{{.LINT_TIMEOUT}}" {{.USER_WORKING_DIR}}/...

  mocks:
    desc: "Generate mocks"
    deps: [install-mock]
    cmds:
      - go generate -v ../...

  tests:
    desc: "Run all tests"
    deps: [mocks]
    cmds:
      - go test {{.GOTEST_ARGS}} -covermode=count -coverpkg=../... -coverprofile={{.COVER_OUT}} -cover ../...

  check:
    deps: [clean, fmt, lint, tests]

  cov:
    desc: "Run code coverage"
    deps: [tests]
    cmds:
      - cat {{.COVER_OUT}} | grep -v "mock" > {{.COVER_NOMOCKS_OUT}}
      - go tool cover -func {{.COVER_NOMOCKS_OUT}} > {{.COVER_OUT}}
      - echo "Coverage overall:"
      - cat {{.COVER_OUT}} | tail -n 1
  
  cov-html:
    desc: "Run code coverage and open html"
    deps: [cov]
    cmds:
      - go tool cover -html={{.COVER_NOMOCKS_OUT}}
  
  cov-badge:
    desc: "Update coverage badge in the README"
    deps: [cov]
    cmds:
      - ./update_coverage.sh {{.COVER_OUT}} {{.USER_WORKING_DIR}}/README.md

  clean-mocks:
    desc: "Remove all generated mocks"
    cmds:
      - find . -iname '*mock.go' -exec rm {} \;
  
  clean-out:
    cmds:
      - find . -iname '*.out' -exec rm {} \;
  
  clean:
    deps: [clean-mocks, clean-out]
